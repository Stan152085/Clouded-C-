#pragma once
#include "Texel.h"
#include <memory>

namespace resources
{
  class Texture;

  class Material
  {
  public:
    ///////////////////////////////////////////////////////////////////////////
    // Material name
    ///////////////////////////////////////////////////////////////////////////
    std::string name;

    ///////////////////////////////////////////////////////////////////////////
    // Base color
    ///////////////////////////////////////////////////////////////////////////
    Texel base_color_factor;
    std::shared_ptr<Texture> base_color_texture;

    /////////////////////////////////////////////////////////////////////////////
    //// roughness and metalicness
    /////////////////////////////////////////////////////////////////////////////
    //float rough_factor;
    //float metalic_factor; 
    //// metallic in the blue channel, roughness in green
    //std::shared_ptr<Texture> metallic_rough_texture;

    ///////////////////////////////////////////////////////////////////////////
    // normal map
    ///////////////////////////////////////////////////////////////////////////
    float normal_scale;
    std::shared_ptr<Texture> normal_texture;

    ///////////////////////////////////////////////////////////////////////////
    // occlusion map
    ///////////////////////////////////////////////////////////////////////////
    float occlusion_strength;
    // the value is in the red channel
    std::shared_ptr<Texture> occlusion_texture;

    ///////////////////////////////////////////////////////////////////////////
    // emission map
    ///////////////////////////////////////////////////////////////////////////
    Texel emissive_factor;
    std::shared_ptr<Texture> emissive_texture;
  };
}
